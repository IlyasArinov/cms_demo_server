{"version":3,"sources":["CMS/Blocks lazy /^/.//.*$/ groupOptions: {} namespace object","services/pages.js","Components/Button.js","Components/BlockWrapper.js","App.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","axios","get","response","data","page","put","Button","type","handleClick","text","componentStyle","background","style","onClick","BlockWrapper","content","blockType","updateContent","Block","React","lazy","useState","overlayStyle","setOverlayStyle","fallback","className","onDoubleClick","event","backgroundColor","zIndex","border","App","blocks","setBlocks","useEffect","pageService","returnedPage","components","console","log","find","block","handleGridItemClick","GridLayout","WidthProvider","RGL","newBlock","grid","x","y","w","h","length","catch","autoSize","verticalCompact","cols","rowHeight","onLayoutChange","layout","forEach","gridItem","Number","i","draggableCancel","c","key","data-id","data-grid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62914a19.chunk.js","sourcesContent":["var map = {\n\t\"./Text\": [\n\t\t29,\n\t\t0,\n\t\t1\n\t],\n\t\"./Text.js\": [\n\t\t29,\n\t\t0,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 63;\nmodule.exports = webpackAsyncContext;","import axios from 'axios'\nconst baseUrl = '/api/pages'\n\nconst get = (id) => axios.get(`${baseUrl}/${id}`).then(response => response.data);\nconst update = (id, page) => axios.put(`${baseUrl}/${id}`, page).then(response => response.data);\n\nexport default { get, update };","import React from 'react';\n\nfunction Button({type, handleClick, text}) {\n    const componentStyle = {\n        background: type === 'success' ? '#4caf50' : 'aliceblue',\n    }\n    return (\n        <button type=\"button\" style={componentStyle} onClick={handleClick}>\n            {text}\n        </button>\n    )\n}\n\nexport default Button;","import React, {Suspense, useState} from 'react';\n\nfunction BlockWrapper({id, content, blockType, updateContent}) {\n    const Block = React.lazy(() => import(`../CMS/Blocks/${blockType}`));\n    const [overlayStyle, setOverlayStyle] = useState({});\n    const handleDoubleClick = (event) => {\n        const clickedOverlayStyle = {\n            backgroundColor: 'transparent',\n            zIndex: 0,\n            border: '1px solid blue',\n        };\n        setOverlayStyle(clickedOverlayStyle);\n\n    };\n    return (\n        <Suspense fallback={<></>}>\n            <div className=\"overlay\" style={overlayStyle} onDoubleClick={handleDoubleClick}/>\n            <Block id={id} content={content} blockType={blockType} updateContent={updateContent}/>\n        </Suspense>\n    )\n}\n\nexport default BlockWrapper;","import React, {useState, useEffect} from 'react';\nimport pageService from './services/pages';\nimport Button from \"./Components/Button\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport './App.css';\nimport BlockWrapper from \"./Components/BlockWrapper\";\n\nfunction App() {\n    const [blocks, setBlocks] = useState([]);\n    const id = 1; //Пока только одна страница\n    useEffect(() => {\n        pageService\n            .get(id)\n            .then(returnedPage => {\n                setBlocks(returnedPage.components)\n                console.log(returnedPage.components);\n            })\n    }, []);\n\n    const addBlockToBody = () => {\n        const newBlock = {\n            grid: {x: 4, y: 1, w: 1, h: 2},\n            content: null,\n            blockType: 'Text',\n            id: blocks.length + 1\n        }\n        setBlocks([...blocks, newBlock ]);\n    }\n\n    const saveBlocks = () => {\n        const changedPage = {\n            id: id,\n            components: blocks\n        };\n        pageService.update(id, changedPage)\n            .then(returnedPage => {\n                // setCMSComponents(returnedPage.components);\n            })\n            .catch(() => {\n                console.log('somethingHappened');\n            });\n    };\n    const handleLayoutChange = (layout) => {\n        layout.forEach((gridItem) => {\n            let changedBlock = blocks.find(block => block.id === Number(gridItem.i));\n            changedBlock.grid = gridItem;\n        })\n    }\n    const updateContent = (id, content) => {\n        const changedBlock = blocks.find(block => block.id === id);\n        changedBlock.content = content;\n    };\n\n    const handleGridItemClick = (event) => {\n        // console.log(event.target);\n        // const gridItem = event.target.closest('.blockWrapper');\n        // gridItem.querySelector('.overlay').classList.add('active');\n    };\n\n    const GridLayout = WidthProvider(RGL);\n  return (\n    <>\n        <Button text=\"Добавить компонент\" type=\"normal\" handleClick={addBlockToBody} />\n        <Button text=\"Сохранить\" type=\"success\" handleClick={saveBlocks} />\n        <GridLayout\n            autoSize={true}\n            verticalCompact={false}\n            className=\"layout\"\n            cols={12}\n            rowHeight={30}\n            onLayoutChange={handleLayoutChange}\n            draggableCancel=\".demo-wrapper\"\n        >\n            {blocks.map(c =>\n                <div className=\"blockWrapper\"\n                     key={c.id}\n                     data-id={c.id}\n                     data-grid={c.grid}\n                     onClick={handleGridItemClick}\n                >\n                    <BlockWrapper {...c} updateContent={updateContent} />\n                </div>\n            )}\n        </GridLayout>\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}